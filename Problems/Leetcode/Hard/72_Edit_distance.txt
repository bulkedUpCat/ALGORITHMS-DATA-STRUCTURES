class Solution {
public:
    int minDistance(string word1, string word2) {
        vector<vector<int>> dp(word1.length() + 1);

        for (int i = 0; i < dp.size(); i++){
            vector<int> row(word2.length() + 1);
            dp[i] = row;
        }

        for (int i = 1; i < dp.size(); i++){
            dp[i][0] = i;
        }

        for (int i = 1; i < dp[0].size(); i++){
            dp[0][i] = i;
        }

        for (int i = 1; i < dp.size(); i++){
            for (int j = 1; j < dp[i].size(); j++){
                if (word1[i - 1] == word2[j - 1]){
                    dp[i][j] = dp[i - 1][j - 1];
                }
                else{
                    dp[i][j] = min(
                            min(dp[i - 1][j] + 1, dp[i][j -1] + 1),
                            dp[i - 1][j - 1] + 1
                            );
                }
            }
        }

        return dp[word1.length()][word2.length()];
    }
};